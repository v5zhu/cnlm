<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.vvboot.end.dao.MenuMybatisDao">
    <insert id="insertMenu" parameterType="com.vvboot.end.entity.Menu" useGeneratedKeys="true"
            keyProperty="menuId">
        insert ignore into t_si_menu(
        menu_id,name,class_name,uisref,attr_link,module_id,progress,sort,locked,create_time,update_time
        )
        values(
        #{menuId},#{name},#{className},#{uisref},#{attrLink},#{moduleId},#{progress},#{sort},#{locked},#{createTime},#{updateTime}
        )
    </insert>
    <select id="findByMenuId" resultType="com.vvboot.end.entity.Menu" parameterType="long">
        select m.*,mo.name moduleName from t_si_menu m
        left join t_si_module mo on m.module_id=mo.module_id
        where menu_id=#{0}
    </select>
    <update id="updateMenu" parameterType="com.vvboot.end.entity.Menu" useGeneratedKeys="true"
            keyProperty="menuId">
        update t_si_menu
        <set>
            name=#{name},
            class_name=#{className},
            uisref=#{uisref},
            attr_link=#{attrLink},
            module_id=#{moduleId},
            progress=#{progress},
            sort=#{sort},
            locked=#{locked},
            update_time=#{updateTime}
        </set>
        where menu_id=#{menuId} and locked=0
    </update>
    <select id="findAll" resultType="com.vvboot.end.entity.Menu">
        select
          m.*,
          mo.name moduleName
        from t_si_menu m
        left join t_si_module mo on m.module_id=mo.module_id
        order by m.module_id asc,m.sort asc
    </select>
    <select id="findByModuleId" resultType="com.vvboot.end.entity.Menu" parameterType="long">
        select
          m.*,
          mo.name moduleName
        from t_si_menu m
        left join t_si_module mo on m.module_id=mo.module_id
        where m.module_id=#{0} order by m.module_id asc,m.sort asc
    </select>
    <select id="findCountByMenuIds" resultType="int" parameterType="list">
        select count(1) from t_si_menu where menu_id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
    <select id="findCountByModuleId" resultType="int" parameterType="long">
        select count(1) from t_si_menu m where m.module_id=#{0}
    </select>
    <delete id="deleteMenu" parameterType="long">
        delete from t_si_menu where menu_id=#{0} and locked=0
    </delete>
    <update id="moveTop" parameterType="hashMap">
        update t_si_menu m1,t_si_menu m2
        <set>
            m1.sort=1,
            m2.sort=m2.sort+1
        </set>
        where m1.menu_id=#{menuId} and m2.menu_id!=#{menuId} and m2.sort &lt; m1.sort and m1.module_id=#{moduleId} and m2.module_id=#{moduleId}
    </update>

    <update id="moveUp" parameterType="hashMap">
        update t_si_menu m1,t_si_menu m2
        <set>
            m1.sort=m1.sort-1,
            m2.sort=m1.sort
        </set>
        where m1.menu_id=#{menuId} and m2.sort=m1.sort-1 and m1.module_id=#{moduleId} and m2.module_id=#{moduleId}
    </update>
    <select id="findMaxSort" resultType="int" parameterType="long">
        select max(sort) from t_si_menu where module_id=#{0}
    </select>
    <update id="moveDown" parameterType="hashMap">
        update t_si_menu m1,t_si_menu m2
        <set>
            m1.sort=m1.sort+1,
            m2.sort=m1.sort
        </set>
        where m1.menu_id=#{menuId} and m2.sort=m1.sort+1 and m1.module_id=#{moduleId} and m2.module_id=#{moduleId}
    </update>
    <update id="moveDownExceptThis" parameterType="hashMap">
        update t_si_menu m
        <set>
            m.sort=m.sort+1
        </set>
        where m.menu_id!=#{menuId} and m.sort <![CDATA[>=]]> #{sort} and m.module_id=#{moduleId}
    </update>
    <update id="moveUpExceptThis" parameterType="hashMap">
        update t_si_menu m
        <set>
            m.sort=m.sort-1
        </set>
        where m.menu_id!=#{menuId} and m.sort <![CDATA[>=]]> #{sort} and m.module_id=#{moduleId}
    </update>
    <update id="lock" parameterType="long">
        update t_si_menu
        <set>
            locked=1
        </set>
        where menu_id=#{0} and locked=0
    </update>

    <update id="unlock" parameterType="long">
        update t_si_menu
        <set>
            locked=0
        </set>
        where menu_id=#{0} and locked=1
    </update>
</mapper>